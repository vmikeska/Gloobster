@using Gloobster.Portal.ViewModels
@using System.Linq
@using System.Threading.Tasks
@using Gloobster.Common
@using Gloobster.Enums
@using Newtonsoft.Json
@model SettingsViewModel

@{
    Layout = "_LayoutNew";
    ViewBag.BodyClass = "user-settings travelb-home";
}

@if (GloobsterConfig.UseMiniScripts)
{
    <script src="/jsb/userSettings.js" type="text/javascript" data-notbuild="true"></script>
}
else
{
    <script src="/js/Views/SettingsView.js"></script>
    <script src="/js/Views/SettingsUtils.js"></script>
    <script src="/js/Planning/TaggingField.js"></script>
    <script src="/js/TravelB/CategoryTagger.js"></script>
    <script src="/js/TravelB/Tabs.js"></script>
    <script src="/js/TravelB/TravelBUtils.js"></script>
    <script src="/js/TravelB/FormValidations.js"></script>
}

<div class="info-block-bck" id="info-travelb">

    <div class="wrapper">

        <div class="title-table">
            <div class="left">
                <h1>User settings</h1>
            </div>

            <div class="right">

            </div>

        </div>

    </div>
</div>



<div class="wrapper">

    <div class="split-tbl">
        <div class="left">

            <div class="photo-cont">

                <img id="avatar" src="@Model.AvatarLink" />

                <a class="photo-edit" href="#">
                    <input type="file" id="avatarFile" />

                    <label for="avatarFile">
                        <span class="icon-edit-pencil"></span>
                    </label>
                </a>

            </div>

            <div class="logins-paired">

                <span class="txt">Paired with </span>

                <span class="soc-ico icon-facebook2" data-t="@((int)SocialNetworkType.Facebook)" style="display: @(!Model.HasSocNet(SocialNetworkType.Facebook) ? "none" : "inline")"></span>                
                <span class="soc-ico icon-twitter" data-t="@((int)SocialNetworkType.Twitter)" style="display: @(!Model.HasSocNet(SocialNetworkType.Twitter) ? "none" : "inline")"></span>
                <span class="soc-ico icon-google-plus" data-t="@((int)SocialNetworkType.Google)" style="display: @(!Model.HasSocNet(SocialNetworkType.Google) ? "none" : "inline")"></span>
                
                <div class="menu" style="display: none">
                    <div class="info">Actions</div>

                    <div class="item">
                        <a href="#" class="icon-switch unpair"><span class="lato"> Unpair</span></a>
                    </div>

                    <div class="item">
                        <a href="#" class="icon-cross close"><span class="lato"> Close</span></a>
                    </div>
                </div>

            </div>


            <div class="logins logins-to-pair">

                <div class="item" data-t="@((int)SocialNetworkType.Facebook)" style="display: @(Model.HasSocNet(SocialNetworkType.Facebook) ? "none" : "block")">
                    <a id="fbBtnPair" class="facebook" href="#"><span class="icon-facebook2"></span>@Model.W("FbButtonPair", "login")</a>
                </div>
                
                <div class="item" data-t="@((int)SocialNetworkType.Twitter)" style="display: @(Model.HasSocNet(SocialNetworkType.Twitter) ? "none" : "block")">
                    <a id="twitterBtnPair" class="twitter" href="#"><span class="icon-twitter"></span>@Model.W("TwButtonPair", "login")</a>
                </div>
                
                <div class="item" data-t="@((int)SocialNetworkType.Google)" style="display: @(Model.HasSocNet(SocialNetworkType.Google) ? "none" : "block")">
                    <a id="googleBtnPair" class="google" href="#"><span class="icon-google-plus"></span>@Model.W("GoButtonPair", "login")</a>
                </div>
                
            </div>

        </div>

        <div class="right">

            <table class="controls">
                <tr>
                    <td colspan="2">
                        <div class="section-title">Basic profile info</div>

                        <div class="section-info">
                            <span class="icon-info"></span>
                            These are only the data we require for basic website use
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <span class="item-title">@Model.W("DisplayName")</span>
                    </td>
                    <td>
                        <input id="displayName" type="text" value="@Model.DisplayName" />
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <div class="section-title">Travel Buddy (required)</div>
                        <div class="section-info">
                            <span class="icon-info"></span>
                            As Travel Buddy service is about meeting real people in real world, users must honestly provide their real credintials. Users must be at least 18 years old
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <span class="item-title">First name</span>
                    </td>
                    <td>
                        <input id="firstName" type="text" placeholder="Last name" value="@Model.FirstName" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <span class="item-title">Last name</span>
                    </td>
                    <td>
                        <input id="lastName" type="text" placeholder="First name" value="@Model.LastName" />
                    </td>
                </tr>

                <tr>
                    <td>
                        <span class="item-title">Birth year</span>
                    </td>
                    <td>
                        <input id="birthYear" type="number" value="@Model.BirthYear" placeholder="eg 1983" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <span class="item-title">@Model.W("Gender")</span>
                    </td>
                    <td>
                        <div id="gender" class="dropdown">
                            <span class="selected">@Model.Gender</span>
                            <ul>
                                <li data-value="1">@Model.W("Male", "layout")</li>
                                <li data-value="2">@Model.W("Female", "layout")</li>
                            </ul>
                            <input type="hidden" value="@((int)Model.GenderVal)">
                        </div>
                    </td>
                </tr>
                
                <tr>
                    <td>
                        <span class="item-title">Languages</span>
                    </td>
                    <td>
                        <div id="langsTagging" class="tags">
                        </div>
                    </td>
                </tr>
                
                <tr>
                    <td>
                        <span class="item-title">@Model.W("HomeCity")</span>
                    </td>
                    <td>
                        <div id="homeCity" class="dropdown">
                            <input class="inputed" type="text" placeholder="City name" value="">
                            <ul></ul>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <span class="item-title">@Model.W("CurrentCity")</span>
                    </td>
                    <td>
                        <div id="currentCity" class="dropdown">
                            <input class="inputed" type="text" placeholder="City name" value="">
                            <ul></ul>
                        </div>
                    </td>
                </tr>

                <tr>
                    <td colspan="2">
                        <div class="section-title">Travel Buddy (optional)</div>
                        <div class="section-info">
                            <span class="icon-info"></span>
                            These data are not required but might give you some extra credit while searching for new friends
                        </div>
                    </td>
                </tr>

                <tr>
                    <td>
                        <span class="item-title">Interests</span>
                    </td>
                    <td>
                        <div id="intersTagging">
                        </div>
                    </td>
                </tr>

                <tr>
                    <td>
                        <span class="item-title">Short description</span>
                    </td>
                    <td>
                        <textarea id="shortDescription" placeholder="Write short description about yourself">@Model.ShortDescription</textarea>
                    </td>
                </tr>

                <tr>
                    <td>
                        <span class="item-title">Status</span>
                    </td>
                    <td>
                        <div id="familyStatus" class="dropdown left">
                            <span class="selected">@Model.FamilyStatus</span>
                            <ul>
                                <li data-value="1">Single</li>
                                <li data-value="2">InRelationship</li>
                            </ul>
                            <input type="hidden" value="0">
                        </div>
                    </td>
                </tr>

            </table>


        </div>
    </div>


    
</div>

<script>
    function onBodyLoad() {
        currentView = new Views.SettingsView();

        currentView.langs = @Html.Raw(JsonConvert.SerializeObject(Model.Languages));
        currentView.inters = @Html.Raw(JsonConvert.SerializeObject(Model.Interests));
        currentView.homeLocation = "@Html.Raw(Model.HomeLocation)";
        currentView.currentLocation = "@Html.Raw(Model.CurrentLocation)";

        currentView.init();
    }
</script>
