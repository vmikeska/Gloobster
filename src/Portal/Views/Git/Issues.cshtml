@using System
@using System.Threading.Tasks
@using Gloobster.Entities
@using Gloobster.Portal.Controllers.Portal
@using Octokit
@model IssuesViewModel

@{    
    ViewBag.BodyClass = "issues";
    var m = Model;
}

<script type="text/javascript" src="/js/Views/IssuesView.js"></script>
<table>
    <tr>
        @foreach (string category in Model.Categories)
        {
            string txt = category;
            if (category != "Stage")
            {
                txt = category.Replace("c-", string.Empty);
            }

            <th>
                
                <div>@txt</div>
                <div class="est">@(Model.GetEstimationByTag(Model.Issues, category) / 8.0) days</div>
            </th>
        }
        
        @foreach (string importance in Model.Importances)
        {
            <tr>
                <td><div>
                        @importance.Replace("i-", string.Empty)
                    </div>
                    <div class="est">@(Model.GetEstimationByTag(Model.Issues, importance) / 8.0) days</div>
                </td>
                
                @foreach (string category in Model.Categories)
                {
                    if (category == "Stage")
                    {
                        continue;
                    }

                    <td>
                        
                        @{
                            var issues = Model.GetIssues(category, importance);
                        }

                        @foreach (var issue in issues)
                        {
                            <div class="issue">
                                <div class="service">
                                    
                                    @{
                                        int hrs = Model.GetHoursEstimation(issue);
                                    }

                                    <div class="estimation @(hrs == 0 ? "unestimated" : string.Empty)">@hrs</div>
                                    <a class="set-act" href="#">D</a>
                                </div>
                                <div>
                                    <a href="@issue.HtmlUrl">@issue.Title</a>
                                </div>
                                <div class="issue-body hidden">
                                    @issue.Body
                                </div>

                                
                            </div>
                        }
                    </td>
                }

            </tr>

        }

    </tr>
</table>

<script>

    function onBodyLoad() {
        currentView = new Views.IssuesView();
    }
</script>
